MAIN := tk
OBJS := ast.cmo pprint.cmo lexer.cmo parser.cmo eval.cmo main.cmo

#test.cmo:
#	ocamlfind ocamlc -package ounit2 -linkpkg -o test test.ml

%.cmo: %.ml
	ocamlc -c $<

%.cmi: %.mli
	ocamlc -c $<

$(MAIN): $(OBJS)
	ocamlc -o $@ $^

lexer.ml: lexer.mll
	ocamllex -q $<

parser.ml: parser.mly
	ocamlyacc -v $<

parser.mli: parser.mly
	ocamlyacc -v $<

clean:
	rm -f *.cmo *.cmi lexer.ml parser.ml parser.mli $(MAIN)

zip:
	zip -r prototype.zip Makefile *.ml *.md *.tk lexer.mll parser.mly examples

# Dependencies generated by `ocamldep -bytecode *.mli *.ml`.
parser.cmo : ast.cmo parser.cmi
parser.cmi : ast.cmo
lexer.cmo : parser.cmi
ast.cmo :
eval.cmo : ast.cmo
pprint.cmo: ast.cmo
main.cmo : parser.cmi lexer.cmo ast.cmo pprint.cmo eval.cmo
test.cmo: main.cmo
